{"ast":null,"code":"import LangchainProcessor from'./LangchainProcessor';class MessageParser{constructor(actionProvider,state,createChatBotMessage){this.actionProvider=actionProvider;this.state=state;this.createChatBotMessage=createChatBotMessage;}async parse(incomingMessage){// Use the processor to get a reply\nconst reply=await LangchainProcessor(incomingMessage,this.state.messages);// Send the reply using the actionProvider\nthis.actionProvider.sendBotResponse(reply);}}export default MessageParser;","map":{"version":3,"names":["LangchainProcessor","MessageParser","constructor","actionProvider","state","createChatBotMessage","parse","incomingMessage","reply","messages","sendBotResponse"],"sources":["C:/Users/zackb/OneDrive/Desktop/Bootcamp/best_project_ever/client/src/components/MessageParser.js"],"sourcesContent":["import LangchainProcessor from './LangchainProcessor';\r\n\r\nclass MessageParser {\r\n    constructor(actionProvider, state, createChatBotMessage) {\r\n        this.actionProvider = actionProvider;\r\n        this.state = state;\r\n        this.createChatBotMessage = createChatBotMessage;\r\n    }\r\n\r\n    async parse(incomingMessage) {\r\n        // Use the processor to get a reply\r\n        const reply = await LangchainProcessor(incomingMessage, this.state.messages);\r\n        \r\n        // Send the reply using the actionProvider\r\n        this.actionProvider.sendBotResponse(reply);\r\n    }\r\n}\r\n\r\nexport default MessageParser;\r\n"],"mappings":"AAAA,MAAO,CAAAA,kBAAkB,KAAM,sBAAsB,CAErD,KAAM,CAAAC,aAAc,CAChBC,WAAWA,CAACC,cAAc,CAAEC,KAAK,CAAEC,oBAAoB,CAAE,CACrD,IAAI,CAACF,cAAc,CAAGA,cAAc,CACpC,IAAI,CAACC,KAAK,CAAGA,KAAK,CAClB,IAAI,CAACC,oBAAoB,CAAGA,oBAAoB,CACpD,CAEA,KAAM,CAAAC,KAAKA,CAACC,eAAe,CAAE,CACzB;AACA,KAAM,CAAAC,KAAK,CAAG,KAAM,CAAAR,kBAAkB,CAACO,eAAe,CAAE,IAAI,CAACH,KAAK,CAACK,QAAQ,CAAC,CAE5E;AACA,IAAI,CAACN,cAAc,CAACO,eAAe,CAACF,KAAK,CAAC,CAC9C,CACJ,CAEA,cAAe,CAAAP,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}