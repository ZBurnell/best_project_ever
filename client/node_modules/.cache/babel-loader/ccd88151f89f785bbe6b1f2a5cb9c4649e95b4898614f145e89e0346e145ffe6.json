{"ast":null,"code":"import { v4 as uuidv4 } from \"uuid\";\nimport { BaseCallbackHandler } from \"./base.js\";\nimport { ConsoleCallbackHandler } from \"./handlers/console.js\";\nimport { getTracingCallbackHandler, getTracingV2CallbackHandler } from \"./handlers/initialize.js\";\nimport { getBufferString } from \"../memory/base.js\";\nimport { getEnvironmentVariable } from \"../util/env.js\";\nimport { LangChainTracer } from \"./handlers/tracer_langchain.js\";\nimport { consumeCallback } from \"./promises.js\";\nexport function parseCallbackConfigArg(arg) {\n  if (!arg) {\n    return {};\n  } else if (Array.isArray(arg) || \"name\" in arg) {\n    return {\n      callbacks: arg\n    };\n  } else {\n    return arg;\n  }\n}\nexport class BaseCallbackManager {\n  setHandler(handler) {\n    return this.setHandlers([handler]);\n  }\n}\nclass BaseRunManager {\n  constructor(runId, handlers, inheritableHandlers, tags, inheritableTags, metadata, inheritableMetadata, _parentRunId) {\n    Object.defineProperty(this, \"runId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: runId\n    });\n    Object.defineProperty(this, \"handlers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: handlers\n    });\n    Object.defineProperty(this, \"inheritableHandlers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: inheritableHandlers\n    });\n    Object.defineProperty(this, \"tags\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: tags\n    });\n    Object.defineProperty(this, \"inheritableTags\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: inheritableTags\n    });\n    Object.defineProperty(this, \"metadata\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: metadata\n    });\n    Object.defineProperty(this, \"inheritableMetadata\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: inheritableMetadata\n    });\n    Object.defineProperty(this, \"_parentRunId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _parentRunId\n    });\n  }\n  async handleText(text) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      try {\n        var _handler$handleText;\n        await ((_handler$handleText = handler.handleText) === null || _handler$handleText === void 0 ? void 0 : _handler$handleText.call(handler, text, this.runId, this._parentRunId, this.tags));\n      } catch (err) {\n        console.error(\"Error in handler \".concat(handler.constructor.name, \", handleText: \").concat(err));\n      }\n    }, handler.awaitHandlers)));\n  }\n}\nexport class CallbackManagerForRetrieverRun extends BaseRunManager {\n  getChild(tag) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const manager = new CallbackManager(this.runId);\n    manager.setHandlers(this.inheritableHandlers);\n    manager.addTags(this.inheritableTags);\n    manager.addMetadata(this.inheritableMetadata);\n    if (tag) {\n      manager.addTags([tag], false);\n    }\n    return manager;\n  }\n  async handleRetrieverEnd(documents) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreRetriever) {\n        try {\n          var _handler$handleRetrie;\n          await ((_handler$handleRetrie = handler.handleRetrieverEnd) === null || _handler$handleRetrie === void 0 ? void 0 : _handler$handleRetrie.call(handler, documents, this.runId, this._parentRunId, this.tags));\n        } catch (err) {\n          console.error(\"Error in handler \".concat(handler.constructor.name, \", handleRetriever\"));\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n  async handleRetrieverError(err) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreRetriever) {\n        try {\n          var _handler$handleRetrie2;\n          await ((_handler$handleRetrie2 = handler.handleRetrieverError) === null || _handler$handleRetrie2 === void 0 ? void 0 : _handler$handleRetrie2.call(handler, err, this.runId, this._parentRunId, this.tags));\n        } catch (error) {\n          console.error(\"Error in handler \".concat(handler.constructor.name, \", handleRetrieverError: \").concat(error));\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n}\nexport class CallbackManagerForLLMRun extends BaseRunManager {\n  async handleLLMNewToken(token) {\n    let idx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      prompt: 0,\n      completion: 0\n    };\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreLLM) {\n        try {\n          var _handler$handleLLMNew;\n          await ((_handler$handleLLMNew = handler.handleLLMNewToken) === null || _handler$handleLLMNew === void 0 ? void 0 : _handler$handleLLMNew.call(handler, token, idx, this.runId, this._parentRunId, this.tags));\n        } catch (err) {\n          console.error(\"Error in handler \".concat(handler.constructor.name, \", handleLLMNewToken: \").concat(err));\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n  async handleLLMError(err) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreLLM) {\n        try {\n          var _handler$handleLLMErr;\n          await ((_handler$handleLLMErr = handler.handleLLMError) === null || _handler$handleLLMErr === void 0 ? void 0 : _handler$handleLLMErr.call(handler, err, this.runId, this._parentRunId, this.tags));\n        } catch (err) {\n          console.error(\"Error in handler \".concat(handler.constructor.name, \", handleLLMError: \").concat(err));\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n  async handleLLMEnd(output) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreLLM) {\n        try {\n          var _handler$handleLLMEnd;\n          await ((_handler$handleLLMEnd = handler.handleLLMEnd) === null || _handler$handleLLMEnd === void 0 ? void 0 : _handler$handleLLMEnd.call(handler, output, this.runId, this._parentRunId, this.tags));\n        } catch (err) {\n          console.error(\"Error in handler \".concat(handler.constructor.name, \", handleLLMEnd: \").concat(err));\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n}\nexport class CallbackManagerForChainRun extends BaseRunManager {\n  getChild(tag) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const manager = new CallbackManager(this.runId);\n    manager.setHandlers(this.inheritableHandlers);\n    manager.addTags(this.inheritableTags);\n    manager.addMetadata(this.inheritableMetadata);\n    if (tag) {\n      manager.addTags([tag], false);\n    }\n    return manager;\n  }\n  async handleChainError(err) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreChain) {\n        try {\n          var _handler$handleChainE;\n          await ((_handler$handleChainE = handler.handleChainError) === null || _handler$handleChainE === void 0 ? void 0 : _handler$handleChainE.call(handler, err, this.runId, this._parentRunId, this.tags));\n        } catch (err) {\n          console.error(\"Error in handler \".concat(handler.constructor.name, \", handleChainError: \").concat(err));\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n  async handleChainEnd(output) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreChain) {\n        try {\n          var _handler$handleChainE2;\n          await ((_handler$handleChainE2 = handler.handleChainEnd) === null || _handler$handleChainE2 === void 0 ? void 0 : _handler$handleChainE2.call(handler, output, this.runId, this._parentRunId, this.tags));\n        } catch (err) {\n          console.error(\"Error in handler \".concat(handler.constructor.name, \", handleChainEnd: \").concat(err));\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n  async handleAgentAction(action) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreAgent) {\n        try {\n          var _handler$handleAgentA;\n          await ((_handler$handleAgentA = handler.handleAgentAction) === null || _handler$handleAgentA === void 0 ? void 0 : _handler$handleAgentA.call(handler, action, this.runId, this._parentRunId, this.tags));\n        } catch (err) {\n          console.error(\"Error in handler \".concat(handler.constructor.name, \", handleAgentAction: \").concat(err));\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n  async handleAgentEnd(action) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreAgent) {\n        try {\n          var _handler$handleAgentE;\n          await ((_handler$handleAgentE = handler.handleAgentEnd) === null || _handler$handleAgentE === void 0 ? void 0 : _handler$handleAgentE.call(handler, action, this.runId, this._parentRunId, this.tags));\n        } catch (err) {\n          console.error(\"Error in handler \".concat(handler.constructor.name, \", handleAgentEnd: \").concat(err));\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n}\nexport class CallbackManagerForToolRun extends BaseRunManager {\n  getChild(tag) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const manager = new CallbackManager(this.runId);\n    manager.setHandlers(this.inheritableHandlers);\n    manager.addTags(this.inheritableTags);\n    manager.addMetadata(this.inheritableMetadata);\n    if (tag) {\n      manager.addTags([tag], false);\n    }\n    return manager;\n  }\n  async handleToolError(err) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreAgent) {\n        try {\n          var _handler$handleToolEr;\n          await ((_handler$handleToolEr = handler.handleToolError) === null || _handler$handleToolEr === void 0 ? void 0 : _handler$handleToolEr.call(handler, err, this.runId, this._parentRunId, this.tags));\n        } catch (err) {\n          console.error(\"Error in handler \".concat(handler.constructor.name, \", handleToolError: \").concat(err));\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n  async handleToolEnd(output) {\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreAgent) {\n        try {\n          var _handler$handleToolEn;\n          await ((_handler$handleToolEn = handler.handleToolEnd) === null || _handler$handleToolEn === void 0 ? void 0 : _handler$handleToolEn.call(handler, output, this.runId, this._parentRunId, this.tags));\n        } catch (err) {\n          console.error(\"Error in handler \".concat(handler.constructor.name, \", handleToolEnd: \").concat(err));\n        }\n      }\n    }, handler.awaitHandlers)));\n  }\n}\nexport class CallbackManager extends BaseCallbackManager {\n  constructor(parentRunId) {\n    super();\n    Object.defineProperty(this, \"handlers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"inheritableHandlers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"tags\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"inheritableTags\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"metadata\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"inheritableMetadata\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"callback_manager\"\n    });\n    Object.defineProperty(this, \"_parentRunId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.handlers = [];\n    this.inheritableHandlers = [];\n    this._parentRunId = parentRunId;\n  }\n  async handleLLMStart(llm, prompts) {\n    let _runId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    let _parentRunId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n    let extraParams = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n    return Promise.all(prompts.map(async prompt => {\n      const runId = uuidv4();\n      await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n        if (!handler.ignoreLLM) {\n          try {\n            var _handler$handleLLMSta;\n            await ((_handler$handleLLMSta = handler.handleLLMStart) === null || _handler$handleLLMSta === void 0 ? void 0 : _handler$handleLLMSta.call(handler, llm, [prompt], runId, this._parentRunId, extraParams, this.tags, this.metadata));\n          } catch (err) {\n            console.error(\"Error in handler \".concat(handler.constructor.name, \", handleLLMStart: \").concat(err));\n          }\n        }\n      }, handler.awaitHandlers)));\n      return new CallbackManagerForLLMRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }));\n  }\n  async handleChatModelStart(llm, messages) {\n    let _runId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    let _parentRunId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n    let extraParams = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n    return Promise.all(messages.map(async messageGroup => {\n      const runId = uuidv4();\n      await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n        if (!handler.ignoreLLM) {\n          try {\n            var _handler$handleChatMo;\n            if (handler.handleChatModelStart) await ((_handler$handleChatMo = handler.handleChatModelStart) === null || _handler$handleChatMo === void 0 ? void 0 : _handler$handleChatMo.call(handler, llm, [messageGroup], runId, this._parentRunId, extraParams, this.tags, this.metadata));else if (handler.handleLLMStart) {\n              var _handler$handleLLMSta2;\n              const messageString = getBufferString(messageGroup);\n              await ((_handler$handleLLMSta2 = handler.handleLLMStart) === null || _handler$handleLLMSta2 === void 0 ? void 0 : _handler$handleLLMSta2.call(handler, llm, [messageString], runId, this._parentRunId, extraParams, this.tags, this.metadata));\n            }\n          } catch (err) {\n            console.error(\"Error in handler \".concat(handler.constructor.name, \", handleLLMStart: \").concat(err));\n          }\n        }\n      }, handler.awaitHandlers)));\n      return new CallbackManagerForLLMRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }));\n  }\n  async handleChainStart(chain, inputs) {\n    let runId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : uuidv4();\n    let runType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreChain) {\n        try {\n          var _handler$handleChainS;\n          await ((_handler$handleChainS = handler.handleChainStart) === null || _handler$handleChainS === void 0 ? void 0 : _handler$handleChainS.call(handler, chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType));\n        } catch (err) {\n          console.error(\"Error in handler \".concat(handler.constructor.name, \", handleChainStart: \").concat(err));\n        }\n      }\n    }, handler.awaitHandlers)));\n    return new CallbackManagerForChainRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n  }\n  async handleToolStart(tool, input) {\n    let runId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : uuidv4();\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreAgent) {\n        try {\n          var _handler$handleToolSt;\n          await ((_handler$handleToolSt = handler.handleToolStart) === null || _handler$handleToolSt === void 0 ? void 0 : _handler$handleToolSt.call(handler, tool, input, runId, this._parentRunId, this.tags, this.metadata));\n        } catch (err) {\n          console.error(\"Error in handler \".concat(handler.constructor.name, \", handleToolStart: \").concat(err));\n        }\n      }\n    }, handler.awaitHandlers)));\n    return new CallbackManagerForToolRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n  }\n  async handleRetrieverStart(retriever, query) {\n    let runId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : uuidv4();\n    let _parentRunId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n    await Promise.all(this.handlers.map(handler => consumeCallback(async () => {\n      if (!handler.ignoreRetriever) {\n        try {\n          var _handler$handleRetrie3;\n          await ((_handler$handleRetrie3 = handler.handleRetrieverStart) === null || _handler$handleRetrie3 === void 0 ? void 0 : _handler$handleRetrie3.call(handler, retriever, query, runId, this._parentRunId, this.tags, this.metadata));\n        } catch (err) {\n          console.error(\"Error in handler \".concat(handler.constructor.name, \", handleRetrieverStart: \").concat(err));\n        }\n      }\n    }, handler.awaitHandlers)));\n    return new CallbackManagerForRetrieverRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n  }\n  addHandler(handler) {\n    let inherit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.handlers.push(handler);\n    if (inherit) {\n      this.inheritableHandlers.push(handler);\n    }\n  }\n  removeHandler(handler) {\n    this.handlers = this.handlers.filter(_handler => _handler !== handler);\n    this.inheritableHandlers = this.inheritableHandlers.filter(_handler => _handler !== handler);\n  }\n  setHandlers(handlers) {\n    let inherit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.handlers = [];\n    this.inheritableHandlers = [];\n    for (const handler of handlers) {\n      this.addHandler(handler, inherit);\n    }\n  }\n  addTags(tags) {\n    let inherit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.removeTags(tags); // Remove duplicates\n    this.tags.push(...tags);\n    if (inherit) {\n      this.inheritableTags.push(...tags);\n    }\n  }\n  removeTags(tags) {\n    this.tags = this.tags.filter(tag => !tags.includes(tag));\n    this.inheritableTags = this.inheritableTags.filter(tag => !tags.includes(tag));\n  }\n  addMetadata(metadata) {\n    let inherit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.metadata = {\n      ...this.metadata,\n      ...metadata\n    };\n    if (inherit) {\n      this.inheritableMetadata = {\n        ...this.inheritableMetadata,\n        ...metadata\n      };\n    }\n  }\n  removeMetadata(metadata) {\n    for (const key of Object.keys(metadata)) {\n      delete this.metadata[key];\n      delete this.inheritableMetadata[key];\n    }\n  }\n  copy() {\n    let additionalHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let inherit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const manager = new CallbackManager(this._parentRunId);\n    for (const handler of this.handlers) {\n      const inheritable = this.inheritableHandlers.includes(handler);\n      manager.addHandler(handler, inheritable);\n    }\n    for (const tag of this.tags) {\n      const inheritable = this.inheritableTags.includes(tag);\n      manager.addTags([tag], inheritable);\n    }\n    for (const key of Object.keys(this.metadata)) {\n      const inheritable = Object.keys(this.inheritableMetadata).includes(key);\n      manager.addMetadata({\n        [key]: this.metadata[key]\n      }, inheritable);\n    }\n    for (const handler of additionalHandlers) {\n      if (\n      // Prevent multiple copies of console_callback_handler\n      manager.handlers.filter(h => h.name === \"console_callback_handler\").some(h => h.name === handler.name)) {\n        continue;\n      }\n      manager.addHandler(handler, inherit);\n    }\n    return manager;\n  }\n  static fromHandlers(handlers) {\n    class Handler extends BaseCallbackHandler {\n      constructor() {\n        super();\n        Object.defineProperty(this, \"name\", {\n          enumerable: true,\n          configurable: true,\n          writable: true,\n          value: uuidv4()\n        });\n        Object.assign(this, handlers);\n      }\n    }\n    const manager = new this();\n    manager.addHandler(new Handler());\n    return manager;\n  }\n  static async configure(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n    var _getEnvironmentVariab;\n    let callbackManager;\n    if (inheritableHandlers || localHandlers) {\n      if (Array.isArray(inheritableHandlers) || !inheritableHandlers) {\n        var _inheritableHandlers$;\n        callbackManager = new CallbackManager();\n        callbackManager.setHandlers((_inheritableHandlers$ = inheritableHandlers === null || inheritableHandlers === void 0 ? void 0 : inheritableHandlers.map(ensureHandler)) !== null && _inheritableHandlers$ !== void 0 ? _inheritableHandlers$ : [], true);\n      } else {\n        callbackManager = inheritableHandlers;\n      }\n      callbackManager = callbackManager.copy(Array.isArray(localHandlers) ? localHandlers.map(ensureHandler) : localHandlers === null || localHandlers === void 0 ? void 0 : localHandlers.handlers, false);\n    }\n    const verboseEnabled = getEnvironmentVariable(\"LANGCHAIN_VERBOSE\") || (options === null || options === void 0 ? void 0 : options.verbose);\n    const tracingV2Enabled = getEnvironmentVariable(\"LANGCHAIN_TRACING_V2\") === \"true\";\n    const tracingEnabled = tracingV2Enabled || ((_getEnvironmentVariab = getEnvironmentVariable(\"LANGCHAIN_TRACING\")) !== null && _getEnvironmentVariab !== void 0 ? _getEnvironmentVariab : false);\n    if (verboseEnabled || tracingEnabled) {\n      if (!callbackManager) {\n        callbackManager = new CallbackManager();\n      }\n      if (verboseEnabled && !callbackManager.handlers.some(handler => handler.name === ConsoleCallbackHandler.prototype.name)) {\n        const consoleHandler = new ConsoleCallbackHandler();\n        callbackManager.addHandler(consoleHandler, true);\n      }\n      if (tracingEnabled && !callbackManager.handlers.some(handler => handler.name === \"langchain_tracer\")) {\n        if (tracingV2Enabled) {\n          callbackManager.addHandler(await getTracingV2CallbackHandler(), true);\n        } else {\n          const session = getEnvironmentVariable(\"LANGCHAIN_PROJECT\") && getEnvironmentVariable(\"LANGCHAIN_SESSION\");\n          callbackManager.addHandler(await getTracingCallbackHandler(session), true);\n        }\n      }\n    }\n    if (inheritableTags || localTags) {\n      if (callbackManager) {\n        callbackManager.addTags(inheritableTags !== null && inheritableTags !== void 0 ? inheritableTags : []);\n        callbackManager.addTags(localTags !== null && localTags !== void 0 ? localTags : [], false);\n      }\n    }\n    if (inheritableMetadata || localMetadata) {\n      if (callbackManager) {\n        callbackManager.addMetadata(inheritableMetadata !== null && inheritableMetadata !== void 0 ? inheritableMetadata : {});\n        callbackManager.addMetadata(localMetadata !== null && localMetadata !== void 0 ? localMetadata : {}, false);\n      }\n    }\n    return callbackManager;\n  }\n}\nfunction ensureHandler(handler) {\n  if (\"name\" in handler) {\n    return handler;\n  }\n  return BaseCallbackHandler.fromMethods(handler);\n}\nexport class TraceGroup {\n  constructor(groupName, options) {\n    Object.defineProperty(this, \"groupName\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: groupName\n    });\n    Object.defineProperty(this, \"options\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: options\n    });\n    Object.defineProperty(this, \"runManager\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  async getTraceGroupCallbackManager(group_name, options) {\n    const cb = new LangChainTracer(options);\n    const cm = await CallbackManager.configure([cb]);\n    const runManager = await (cm === null || cm === void 0 ? void 0 : cm.handleChainStart({\n      lc: 1,\n      type: \"not_implemented\",\n      id: [\"langchain\", \"callbacks\", \"groups\", group_name]\n    }, {}));\n    if (!runManager) {\n      throw new Error(\"Failed to create run group callback manager.\");\n    }\n    return runManager;\n  }\n  async start() {\n    if (!this.runManager) {\n      this.runManager = await this.getTraceGroupCallbackManager(this.groupName, this.options);\n    }\n    return this.runManager.getChild();\n  }\n  async end() {\n    if (this.runManager) {\n      await this.runManager.handleChainEnd({});\n      this.runManager = undefined;\n    }\n  }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function traceAsGroup(groupOptions, enclosedCode) {\n  const traceGroup = new TraceGroup(groupOptions.name, groupOptions);\n  const callbackManager = await traceGroup.start();\n  try {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n    return await enclosedCode(callbackManager, ...args);\n  } finally {\n    await traceGroup.end();\n  }\n}","map":{"version":3,"names":["v4","uuidv4","BaseCallbackHandler","ConsoleCallbackHandler","getTracingCallbackHandler","getTracingV2CallbackHandler","getBufferString","getEnvironmentVariable","LangChainTracer","consumeCallback","parseCallbackConfigArg","arg","Array","isArray","callbacks","BaseCallbackManager","setHandler","handler","setHandlers","BaseRunManager","constructor","runId","handlers","inheritableHandlers","tags","inheritableTags","metadata","inheritableMetadata","_parentRunId","Object","defineProperty","enumerable","configurable","writable","value","handleText","text","Promise","all","map","_handler$handleText","call","err","console","error","concat","name","awaitHandlers","CallbackManagerForRetrieverRun","getChild","tag","manager","CallbackManager","addTags","addMetadata","handleRetrieverEnd","documents","ignoreRetriever","_handler$handleRetrie","handleRetrieverError","_handler$handleRetrie2","CallbackManagerForLLMRun","handleLLMNewToken","token","idx","arguments","length","undefined","prompt","completion","ignoreLLM","_handler$handleLLMNew","handleLLMError","_handler$handleLLMErr","handleLLMEnd","output","_handler$handleLLMEnd","CallbackManagerForChainRun","handleChainError","ignoreChain","_handler$handleChainE","handleChainEnd","_handler$handleChainE2","handleAgentAction","action","ignoreAgent","_handler$handleAgentA","handleAgentEnd","_handler$handleAgentE","CallbackManagerForToolRun","handleToolError","_handler$handleToolEr","handleToolEnd","_handler$handleToolEn","parentRunId","handleLLMStart","llm","prompts","_runId","extraParams","_handler$handleLLMSta","handleChatModelStart","messages","messageGroup","_handler$handleChatMo","_handler$handleLLMSta2","messageString","handleChainStart","chain","inputs","runType","_handler$handleChainS","handleToolStart","tool","input","_handler$handleToolSt","handleRetrieverStart","retriever","query","_handler$handleRetrie3","addHandler","inherit","push","removeHandler","filter","_handler","removeTags","includes","removeMetadata","key","keys","copy","additionalHandlers","inheritable","h","some","fromHandlers","Handler","assign","configure","localHandlers","localTags","localMetadata","options","_getEnvironmentVariab","callbackManager","_inheritableHandlers$","ensureHandler","verboseEnabled","verbose","tracingV2Enabled","tracingEnabled","prototype","consoleHandler","session","fromMethods","TraceGroup","groupName","getTraceGroupCallbackManager","group_name","cb","cm","runManager","lc","type","id","Error","start","end","traceAsGroup","groupOptions","enclosedCode","traceGroup","_len","args","_key"],"sources":["C:/Users/zackb/OneDrive/Desktop/Bootcamp/best_project_ever/client/node_modules/langchain/dist/callbacks/manager.js"],"sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport { BaseCallbackHandler, } from \"./base.js\";\nimport { ConsoleCallbackHandler } from \"./handlers/console.js\";\nimport { getTracingCallbackHandler, getTracingV2CallbackHandler, } from \"./handlers/initialize.js\";\nimport { getBufferString } from \"../memory/base.js\";\nimport { getEnvironmentVariable } from \"../util/env.js\";\nimport { LangChainTracer, } from \"./handlers/tracer_langchain.js\";\nimport { consumeCallback } from \"./promises.js\";\nexport function parseCallbackConfigArg(arg) {\n    if (!arg) {\n        return {};\n    }\n    else if (Array.isArray(arg) || \"name\" in arg) {\n        return { callbacks: arg };\n    }\n    else {\n        return arg;\n    }\n}\nexport class BaseCallbackManager {\n    setHandler(handler) {\n        return this.setHandlers([handler]);\n    }\n}\nclass BaseRunManager {\n    constructor(runId, handlers, inheritableHandlers, tags, inheritableTags, metadata, inheritableMetadata, _parentRunId) {\n        Object.defineProperty(this, \"runId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: runId\n        });\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: handlers\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableHandlers\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tags\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableTags\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: metadata\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableMetadata\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _parentRunId\n        });\n    }\n    async handleText(text) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            try {\n                await handler.handleText?.(text, this.runId, this._parentRunId, this.tags);\n            }\n            catch (err) {\n                console.error(`Error in handler ${handler.constructor.name}, handleText: ${err}`);\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForRetrieverRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleRetrieverEnd(documents) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverEnd?.(documents, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetriever`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleRetrieverError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (error) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForLLMRun extends BaseRunManager {\n    async handleLLMNewToken(token, idx = { prompt: 0, completion: 0 }) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMNewToken?.(token, idx, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMError: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForChainRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleChainError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainError: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleChainEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentAction(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentAction?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentEnd(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentEnd?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForToolRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleToolError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolError: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleToolEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManager extends BaseCallbackManager {\n    constructor(parentRunId) {\n        super();\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"callback_manager\"\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.handlers = [];\n        this.inheritableHandlers = [];\n        this._parentRunId = parentRunId;\n    }\n    async handleLLMStart(llm, prompts, _runId = undefined, _parentRunId = undefined, extraParams = undefined) {\n        return Promise.all(prompts.map(async (prompt) => {\n            const runId = uuidv4();\n            await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n                if (!handler.ignoreLLM) {\n                    try {\n                        await handler.handleLLMStart?.(llm, [prompt], runId, this._parentRunId, extraParams, this.tags, this.metadata);\n                    }\n                    catch (err) {\n                        console.error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                    }\n                }\n            }, handler.awaitHandlers)));\n            return new CallbackManagerForLLMRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChatModelStart(llm, messages, _runId = undefined, _parentRunId = undefined, extraParams = undefined) {\n        return Promise.all(messages.map(async (messageGroup) => {\n            const runId = uuidv4();\n            await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n                if (!handler.ignoreLLM) {\n                    try {\n                        if (handler.handleChatModelStart)\n                            await handler.handleChatModelStart?.(llm, [messageGroup], runId, this._parentRunId, extraParams, this.tags, this.metadata);\n                        else if (handler.handleLLMStart) {\n                            const messageString = getBufferString(messageGroup);\n                            await handler.handleLLMStart?.(llm, [messageString], runId, this._parentRunId, extraParams, this.tags, this.metadata);\n                        }\n                    }\n                    catch (err) {\n                        console.error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                    }\n                }\n            }, handler.awaitHandlers)));\n            return new CallbackManagerForLLMRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChainStart(chain, inputs, runId = uuidv4(), runType = undefined) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainStart?.(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n        return new CallbackManagerForChainRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleToolStart(tool, input, runId = uuidv4()) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolStart?.(tool, input, runId, this._parentRunId, this.tags, this.metadata);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n        return new CallbackManagerForToolRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleRetrieverStart(retriever, query, runId = uuidv4(), _parentRunId = undefined) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverStart?.(retriever, query, runId, this._parentRunId, this.tags, this.metadata);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n        return new CallbackManagerForRetrieverRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    addHandler(handler, inherit = true) {\n        this.handlers.push(handler);\n        if (inherit) {\n            this.inheritableHandlers.push(handler);\n        }\n    }\n    removeHandler(handler) {\n        this.handlers = this.handlers.filter((_handler) => _handler !== handler);\n        this.inheritableHandlers = this.inheritableHandlers.filter((_handler) => _handler !== handler);\n    }\n    setHandlers(handlers, inherit = true) {\n        this.handlers = [];\n        this.inheritableHandlers = [];\n        for (const handler of handlers) {\n            this.addHandler(handler, inherit);\n        }\n    }\n    addTags(tags, inherit = true) {\n        this.removeTags(tags); // Remove duplicates\n        this.tags.push(...tags);\n        if (inherit) {\n            this.inheritableTags.push(...tags);\n        }\n    }\n    removeTags(tags) {\n        this.tags = this.tags.filter((tag) => !tags.includes(tag));\n        this.inheritableTags = this.inheritableTags.filter((tag) => !tags.includes(tag));\n    }\n    addMetadata(metadata, inherit = true) {\n        this.metadata = { ...this.metadata, ...metadata };\n        if (inherit) {\n            this.inheritableMetadata = { ...this.inheritableMetadata, ...metadata };\n        }\n    }\n    removeMetadata(metadata) {\n        for (const key of Object.keys(metadata)) {\n            delete this.metadata[key];\n            delete this.inheritableMetadata[key];\n        }\n    }\n    copy(additionalHandlers = [], inherit = true) {\n        const manager = new CallbackManager(this._parentRunId);\n        for (const handler of this.handlers) {\n            const inheritable = this.inheritableHandlers.includes(handler);\n            manager.addHandler(handler, inheritable);\n        }\n        for (const tag of this.tags) {\n            const inheritable = this.inheritableTags.includes(tag);\n            manager.addTags([tag], inheritable);\n        }\n        for (const key of Object.keys(this.metadata)) {\n            const inheritable = Object.keys(this.inheritableMetadata).includes(key);\n            manager.addMetadata({ [key]: this.metadata[key] }, inheritable);\n        }\n        for (const handler of additionalHandlers) {\n            if (\n            // Prevent multiple copies of console_callback_handler\n            manager.handlers\n                .filter((h) => h.name === \"console_callback_handler\")\n                .some((h) => h.name === handler.name)) {\n                continue;\n            }\n            manager.addHandler(handler, inherit);\n        }\n        return manager;\n    }\n    static fromHandlers(handlers) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuidv4()\n                });\n                Object.assign(this, handlers);\n            }\n        }\n        const manager = new this();\n        manager.addHandler(new Handler());\n        return manager;\n    }\n    static async configure(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        let callbackManager;\n        if (inheritableHandlers || localHandlers) {\n            if (Array.isArray(inheritableHandlers) || !inheritableHandlers) {\n                callbackManager = new CallbackManager();\n                callbackManager.setHandlers(inheritableHandlers?.map(ensureHandler) ?? [], true);\n            }\n            else {\n                callbackManager = inheritableHandlers;\n            }\n            callbackManager = callbackManager.copy(Array.isArray(localHandlers)\n                ? localHandlers.map(ensureHandler)\n                : localHandlers?.handlers, false);\n        }\n        const verboseEnabled = getEnvironmentVariable(\"LANGCHAIN_VERBOSE\") || options?.verbose;\n        const tracingV2Enabled = getEnvironmentVariable(\"LANGCHAIN_TRACING_V2\") === \"true\";\n        const tracingEnabled = tracingV2Enabled ||\n            (getEnvironmentVariable(\"LANGCHAIN_TRACING\") ?? false);\n        if (verboseEnabled || tracingEnabled) {\n            if (!callbackManager) {\n                callbackManager = new CallbackManager();\n            }\n            if (verboseEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === ConsoleCallbackHandler.prototype.name)) {\n                const consoleHandler = new ConsoleCallbackHandler();\n                callbackManager.addHandler(consoleHandler, true);\n            }\n            if (tracingEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === \"langchain_tracer\")) {\n                if (tracingV2Enabled) {\n                    callbackManager.addHandler(await getTracingV2CallbackHandler(), true);\n                }\n                else {\n                    const session = getEnvironmentVariable(\"LANGCHAIN_PROJECT\") &&\n                        getEnvironmentVariable(\"LANGCHAIN_SESSION\");\n                    callbackManager.addHandler(await getTracingCallbackHandler(session), true);\n                }\n            }\n        }\n        if (inheritableTags || localTags) {\n            if (callbackManager) {\n                callbackManager.addTags(inheritableTags ?? []);\n                callbackManager.addTags(localTags ?? [], false);\n            }\n        }\n        if (inheritableMetadata || localMetadata) {\n            if (callbackManager) {\n                callbackManager.addMetadata(inheritableMetadata ?? {});\n                callbackManager.addMetadata(localMetadata ?? {}, false);\n            }\n        }\n        return callbackManager;\n    }\n}\nfunction ensureHandler(handler) {\n    if (\"name\" in handler) {\n        return handler;\n    }\n    return BaseCallbackHandler.fromMethods(handler);\n}\nexport class TraceGroup {\n    constructor(groupName, options) {\n        Object.defineProperty(this, \"groupName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: groupName\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        Object.defineProperty(this, \"runManager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    async getTraceGroupCallbackManager(group_name, options) {\n        const cb = new LangChainTracer(options);\n        const cm = await CallbackManager.configure([cb]);\n        const runManager = await cm?.handleChainStart({\n            lc: 1,\n            type: \"not_implemented\",\n            id: [\"langchain\", \"callbacks\", \"groups\", group_name],\n        }, {});\n        if (!runManager) {\n            throw new Error(\"Failed to create run group callback manager.\");\n        }\n        return runManager;\n    }\n    async start() {\n        if (!this.runManager) {\n            this.runManager = await this.getTraceGroupCallbackManager(this.groupName, this.options);\n        }\n        return this.runManager.getChild();\n    }\n    async end() {\n        if (this.runManager) {\n            await this.runManager.handleChainEnd({});\n            this.runManager = undefined;\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function traceAsGroup(groupOptions, enclosedCode, ...args) {\n    const traceGroup = new TraceGroup(groupOptions.name, groupOptions);\n    const callbackManager = await traceGroup.start();\n    try {\n        return await enclosedCode(callbackManager, ...args);\n    }\n    finally {\n        await traceGroup.end();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}